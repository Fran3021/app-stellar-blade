"""
Django settings for stellarblade project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import environ
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATES_DIR = BASE_DIR / 'stellarblade' / 'templates'


env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)

environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

#seguridad https, ponerlo en true solo en produccion, en desarrollo siempre false
SECURE_SSL_REDIRECT = True
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

ALLOWED_HOSTS = env.list('ALLOWED_HOSTS')

#duracion de incio sesion si no pincha el checkbox de recuerdame
SESSION_COOKIE_AGE = 604800#una semana en segundos

# Si es True, la sesión expira al cerrar el navegador (solo si no hay checkbox personalizado)
SESSION_EXPIRE_AT_BROWSER_CLOSE = False

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #apps de terceros
    'django_extensions',
    'crispy_forms',
    'crispy_bootstrap5',
    'django_libsass',
    'thumbnails',
    'rosetta',
    #apps de la aplicacion
    'publicaciones',
    'usuarios',
    'notificaciones',
    'mensajes',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',#tiene que ir antes de CSRF y despues de SessionMiddleware
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'stellarblade.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR, ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',#añadido para disponer de LANGUAGES en las plantillas
                'usuarios.custom_processors.current_user',
                'usuarios.custom_processors.all_users',
                'notificaciones.custom_processors.notificaciones_totales',
                'publicaciones.custom_processors.formulario_contestar_comentario',
                'publicaciones.custom_processors.all_publicaciones',
                'mensajes.custom_processors.formulario_contestar_mensaje',
            ],
        },
    },
]

WSGI_APPLICATION = 'stellarblade.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default':{
        'ENGINE': env('ENGINE'),
        'NAME': env('NAME_DB'),
        'USER': env('USER_DB'),
        'PASSWORD': env('PASSWORD_DB'),
        'HOST': env('HOST_DB'),
        'PORT': env('PORT_DB'),
        'OPTION':{
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/


LANGUAGE_CODE = 'es-es'#idioma predeterminado

TIME_ZONE = 'Europe/Madrid'

USE_I18N = True

USE_TZ = True

USE_L10N = True

PREFIX_DEFAULT_LANGUAGE = True#nos pone el prefijo del idioma en el que este nuestra pagina(en--> ingles/ es --> español)

#idiomas que queramo traduccion
LANGUAGES = [
    ('en', 'English'),
    ('es', 'Español'),
    ('es-es', 'Español España'),#para que la url nos funcione al hacer los test despues de traducir con rosetta
]
MODELTRANSLATION_LANGUAGES = ('es', 'en')#de todos los idiomas que tengo en LANGUAGES, en cuantos quiero traducir
MODELTRANSLATION_DEFAULT_LANGUAGE = 'es'#idioma originial de nuestro proyecto
MODELTRANSLATION_FALLBACK_LANGUAGES = ('es', )#en caso de que no este traducido algo, en que idioma me lo va a mostrar
MODELTRANSLATION_PREPOPULATE_LANGUAGE = 'es'#en que idioma me lo muestra en el admin

#valor por defecto del nombre  de la cookie del lenguaje
LANGUAGE_COOKIE_NAME = 'django_language'

#ruta donde se guardan las traducciones
LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/


STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

#Varible y directorio de los archivos media, para que nos permitanb añadir al crear un nuevo blog o curso
import os

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



#para crispy forms con bootstrap5
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

#pagina donde se dirige cuando el login es necesario y no esta logeado
LOGIN_URL = 'login'

#para que funciona sass, en este proyecto has utilizado libsass
STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
]

STATICFILES_STORAGE = "django.contrib.staticfiles.storage.ManifestStaticFilesStorage"

#renderizado de imagenes con thumbnails
THUMBNAILS = {
    'METADATA': {
        'BACKEND': 'thumbnails.backends.metadata.DatabaseBackend',
    },
    'STORAGE': {
        'BACKEND': 'django.core.files.storage.FileSystemStorage',
        # You can also use Amazon S3 or any other Django storage backends
    },
    'SIZES': {
        #vista movil
        'small': {
            'PROCESSORS': [
                {'PATH': 'thumbnails.processors.resize', 'width': 250, 'height': 250, 'method': 'fill'},
                {'PATH': 'thumbnails.processors.crop', 'width': 240, 'height': 240},
            ],
        },
        'xs': {
            'PROCESSORS': [
                {'PATH': 'thumbnails.processors.resize', 'width': 140, 'height': 140, 'method': 'fill'},
                {'PATH': 'thumbnails.processors.crop', 'width': 70, 'height': 70},
            ],
        },
        'medium': {
            'PROCESSORS': [
                {'PATH': 'thumbnails.processors.resize', 'width': 500, 'height': 500, 'method': 'fit'},
                {'PATH': 'thumbnails.processors.crop', 'width': 350, 'height': 350},
            ],
        },
        'large': {
            'PROCESSORS': [
                {'PATH': 'thumbnails.processors.resize', 'width': 500, 'height': 500, 'method': 'fill'},
                {'PATH': 'thumbnails.processors.crop', 'width': 490, 'height': 490},
            ],
        },
        'largepublicacion': {
            'PROCESSORS': [
                {'PATH': 'thumbnails.processors.resize', 'width': 1000, 'height': 1000, 'method': 'fill'},
                {'PATH': 'thumbnails.processors.crop', 'width': 900, 'height': 900},
            ],
        },
        'movilpublicacion': {
            'PROCESSORS': [
                {'PATH': 'thumbnails.processors.resize', 'width': 800, 'height': 800, 'method': 'fill'},
                {'PATH': 'thumbnails.processors.crop', 'width': 700, 'height': 700},
            ],
        },
    }
}

# Tamaño máximo de subida de archivos (20 MB)
DATA_UPLOAD_MAX_MEMORY_SIZE = 20 * 1024 * 1024  # 20 MB 
FILE_UPLOAD_MAX_MEMORY_SIZE = 20 * 1024 * 1024  # por seguridad

#variables necesarias para opcion de recuperar contraseña
EMAIL_BACKEND = env('EMAIL_BACKEND')
DEFAULT_FROM_EMAIL = env('DEFAULT_FROM_EMAIL')

